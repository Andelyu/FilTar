def get_dna_file(wildcards):
	sci_species_name = config['sci_species_name'][wildcards.species]
        genome_build = config['genome_build'][wildcards.species]

	return('data/' + sci_species_name + '.' + genome_build + '.dna.chromosome.{}.fa'.format(wildcards.chrom))

def get_NCBI_taxonomic_id(wildcards):
	if wildcards.species == 'hsa':
		return('9606')
	if wildcards.species == 'mmu':
		return('10090')

rule get_single_species_seq_fa_targetscan:
	input:
		dna=get_dna_file,
		bed="results/bed/mmu_liver_3UTR.chrY.bedtools.bed"
	output: "results/msa/{species}_{tissue}_chr{chrom}_{feature}.tmp.fa"
	conda: 'envs/bedtools.yaml'
	shell: "bedtools getfasta -name -s -fi {input.dna} -bed {input.bed} -fo {output}"

rule get_single_species_seq_fa_targetscan_nr:
        input:
                dna=get_dna_file,
                bed="results/bed/no_reannotation/{species}_{feature}.chr{chrom}.bedtools.bed"
        output: "results/msa/no_reannotation/{species}_chr{chrom}_{feature}.tmp.fa"
        conda: 'envs/bedtools.yaml'
        shell: "bedtools getfasta -name -s -fi {input.dna} -bed {input.bed} -fo {output}"

rule merge_fasta_targetscan:
        input: "results/msa/{species}_{tissue}_chr{chrom}_{feature}.tmp.fa"
        output: "results/msa/{species}_{tissue}_chr{chrom}_{feature}.tmp2.fa"
        script: "merge_fasta.R"

rule merge_fasta_targetscan_nr:
	input: "results/msa/no_reannotation/{species}_chr{chrom}_{feature}.tmp.fa"
	output: "results/msa/no_reannotation/{species}_chr{chrom}_{feature}.tmp2.fa"
	script: "merge_fasta.R"

rule convert_fasta_to_tsv:
	input: "results/msa/{species}_{tissue}_chr{chrom}_{feature}.tmp2.fa"
	output: "results/msa/{species}_{tissue}_chr{chrom}_{feature}_msa.tsv"
	params: get_NCBI_taxonomic_id
	shell: "exe/convert_fa_to_tsv2.sh {input} {params} {output}"

rule convert_fasta_to_tsv_nr:
        input: "results/msa/no_reannotation/{species}_chr{chrom}_{feature}.tmp2.fa"
        output: "results/msa/no_reannotation/{species}_chr{chrom}_{feature}.tsv"
        params: get_NCBI_taxonomic_id
        shell: "exe/convert_fa_to_tsv2.sh {input} {params} {output}"





