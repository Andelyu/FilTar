
def get_gtf_file(wildcards):
	print(wildcards)
	if wildcards.species == 'hsa':
		return ('data/Homo_sapiens.GRCh38.94.gtf')
	elif wildcards.species == 'mmu':
		return ('data/Mus_musculus.GRCm38.94.gtf')

rule index_maf_files:
	input:
	   maf="data/maf_{species}/chr{chrom}.maf",
	output:
	   protected("data/{species}_chr{chrom}.mafindex")
	benchmark:
           "benchmarks/{species}_chr{chrom}.mafindex.log"
	script:
	   "biopython_maf_processing.py"

rule gtf_to_bed:
        input:
            gtf=get_gtf_file,
            script="exe/pre-processing/gtf_to_bed.sh"
        output:
            "results/bed/{species}_{feature}.chr{chrom}.bed"
        conda:
            "envs/biopython.yaml"
        shell:
            "{input.script} {input.gtf} {wildcards.feature} {wildcards.chrom} {output}"

rule biopython_get_msa:
	input:
           maf="data/maf_{species}/chr{chrom}.maf",
           bed="results/bed/{species}_{feature}.chr{chrom}.bed",
           maf_index="data/{species}_chr{chrom}.mafindex",
           shell_script="exe/targetscan7/convert_fasta_to_tsv.sh"
	output:
           "results/{species}_chr{chrom}_{feature}_msa.tsv"
	conda:
           "envs/biopython.yaml"
	script:
           "biopython_maf_processing2.py"

#rule biopython_get_3UTR_tsv_alignments:
#       input:
#           maf="data/maf_{species}/chr{chrom}.maf",
#           bed="results/bed/longest/{species}_{feature}.chr{chrom}.bed",
#           maf_index="data/{species}_chr{chrom}.mafindex",
#           shell_script="exe/targetscan7/convert_fasta_to_tsv.sh"
#        output:
#           "results/utrs/longest/{species}_chr{chrom}_{feature}_msa.tsv"
#        conda:
#           "envs/biopython.yaml"
#        script:
#           "biopython_maf_processing2.py"


