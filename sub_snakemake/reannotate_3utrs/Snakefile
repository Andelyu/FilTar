#!/bin/bash

def get_bed6_file(wildcards):
        if wildcards.species == 'hsa':
                return('results/Homo_sapiens.GRCh38.92.bed6')
        elif wildcards.species == 'mmu':
                return('results/Mus_musculus.GRCm38.92.bed6')

rule get_bed6_file: #three_prime_utrs only
        input:
            script="exe/gtf_to_bed.sh",
            gtf="data/{prefix}.gtf"
        output:
            "results/{prefix}.bed6"
        shell:
            "{input.script} {input.gtf} {output}"

#rule get_extended_bed_file:
#         input:
#            normal_bed= get_bed6_file,
#            extended_bed="results/bed/specific/{species}_{cell_line}.utr.bed"
#         output:
#            "results/bed/specific/{species}_{cell_line}.utr.full.bed"
#         log:
#            "{species}_{cell_line}.log"
#         script:
#             "extend_bed2.R"

rule reformat_normal_bed_file:
         input:
           script="exe/reformat_normal_bed.R",
           normal_bed="results/{species_prefix}.92.bed6"
         output: "results/{species_prefix}.92.reformatted.bed6"
         shell:
             "Rscript {input.script} {input.normal_bed} {output}"

rule get_longest_utr_bed:
	input: get_bed6_file
	output: 'results/bed/longest/{species}_longest.utr.bed'
	params:
		bed_dir='results/bed/specific/'
	script: 'merge_multiple_bed_files.R'  

#rule split_bed:
#        input:
#                "results/bed/longest/{species}_longest.utr.bed"
#        output:
#                "results/bed/longest/{species}_3UTR.chr{chrom}.bed"
#        shell:
#                "grep '^{wildcards.chrom}' {input} > {output}"

