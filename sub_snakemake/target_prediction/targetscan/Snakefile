#!/bin/bash

### miRNA prep ###

rule prep_mirna_seeds:
        input:                      
           data="data/mature.fa",
           script="exe/get_mirna_seeds.sh"
        output:
           "results/mature_mirna_seed.tsv"
        shell:
           "{input.script} {input.data} > {output}"

rule prep_mirna_family_file:
        input:
           mature_mirna_seeds="results/mature_mirna_seed.tsv"
        output:
           "results/{species}_mirna_family.tsv",
        script:
           "get_mirna_family.R"

rule prep_mirna_mature_alt:
        input:
           data="data/mature.fa",
           script="exe/prep_mirna_mature_alt.sh"
        output:
           "results/{species}_mature_mirna.tsv"
        shell:
           "{input.script} {input.data} {wildcards.species} > {output}"

rule prep_mir_for_context_scores:
        input:
           mature_mirnas="results/{species}_mature_mirna.tsv",
           mirna_seed="results/{species}_mirna_family.tsv",
        output:
           "results/{species}_mir_for_context_scores.tsv"
        script:
           "get_mirna_context.R"

### main ###

rule targetscan_sites:
	input:
           msa="results/msa/{species}_{tissue}_chr{chrom}_3UTR_msa.tsv",
           mirna_families="results/{species}_mirna_family.tsv",
           script="exe/targetscan7/targetscan_70.patch.pl"
	output:
           "results/targets/{species}_{tissue}_chr{chrom}_msa.sites.tmp.tsv"
	benchmark:
           "benchmarks/{species}_{tissue}_chr{chrom}_msa.sites.log"
	shell:
           "{input.script} {input.mirna_families} {input.msa} {output}"

rule targetscan_branch_lengths:
        input:
           msa_3UTR="results/msa/{species}_{tissue}_chr{chrom}_3UTR_msa.tsv",
           script="exe/targetscan7/targetscan_70_BL_bins.patch.pl"
        output:
             "results/targets/{species}_{tissue}_chr{chrom}_msa.branch_lengths.tsv"
        benchmark:
             "benchmarks/branch_lengths_{species}_{tissue}_chr{chrom}.log"
        shell:
            "{input.script} {input.msa_3UTR} {wildcards.species}  > {output}"

rule targetscan_PCTs:
        input:
            mirna_family="results/{species}_mirna_family.tsv",
            mirna_sites="results/targets/{species}_{tissue}_chr{chrom}_msa.sites.tsv",
            branch_lengths="results/targets/{species}_{tissue}_chr{chrom}_msa.branch_lengths.tsv",
            script="exe/targetscan7/targetscan_70_BL_PCT.patch.pl",
            PCT_param="exe/targetscan7/PCT_parameters"
        output:
            "results/targets/{species}_{tissue}_chr{chrom}_msa.PCTs.tsv"
        benchmark:
            "benchmarks/{species}_{tissue}_chr{chrom}_msa.PCTs.log"
        shell:
            "{input.script} {input.mirna_family} {input.mirna_sites} {input.branch_lengths} > {output}"

rule targetscan_eightmers:
        input:
            mirna_seeds="results/{species}_mirna_family.tsv",
            CDS="results/msa/{species}_{tissue}_chr{chrom}_CDS_msa.tsv",
            script="exe/targetscan7/targetscan_count_8mers.pl"
        output:
            eightmer_counts="results/targets/{species}_{tissue}_chr{chrom}_msa.eightmers.tsv",
            CDS_lengths="results/msa/{species}_{tissue}_chr{chrom}_CDS_msa.tsv.lengths.txt"
        shell:
            "{input.script} {input.mirna_seeds} {input.CDS} > {output.eightmer_counts}"

rule targetscan_context_scores:
        input:
            mirnas="results/{species}_mir_for_context_scores.tsv",
            msa="results/msa/{species}_{tissue}_chr{chrom}_3UTR_msa.tsv",
            PCTs="results/targets/{species}_{tissue}_chr{chrom}_msa.PCTs.tsv",
            CDS_lengths="results/msa/{species}_{tissue}_chr{chrom}_CDS_msa.tsv.lengths.txt",
            eightmer_counts="results/targets/{species}_{tissue}_chr{chrom}_msa.eightmers.tsv",
            contextpp_script="exe/targetscan7/targetscan_70_context_scores.patch.pl",
            agarwal_param="exe/targetscan7/Agarwal_2015_parameters.txt",
            AIRs="results/targets/{species}_{tissue}.AIRs.txt", #exe/targetscan7/All_cell_lines.AIRs.txt",
            TA_SPS_param="exe/targetscan7/TA_SPS_by_seed_region.txt",
            script="exe/targetscan7/targetscan_70_context_scores.patch.pl"
        output:
            "results/targets/{species}_{tissue}_chr{chrom}_msa.contextpp.tsv"
        benchmark:
            "benchmarks/{species}_{tissue}_chr{chrom}_msa.contextpp.log"
        shell:
            "{input.script} {input.mirnas} {input.msa} {input.PCTs} {input.CDS_lengths} {input.eightmer_counts} {output} species['{wildcards.species}'] {input.AIRs}"

rule aggregate_contextpp_scores:
       input: lambda wildcards: expand("results/targets/{species}_{tissue}_chr{chrom}_msa.contextpp.tsv", chrom=config['chromosomes'][wildcards.species], species=wildcards.species, tissue=wildcards.tissue)
       output: "results/targets/{species}_{tissue}_msa.contextpp.tsv"
       shell: "cat {input} | sed '1b;/Gene/d' > {output}"

### other ###

rule get_all_transcripts:
	input: "results/bed/{species}_{tissue}.utr.full.bed"
	output: "results/bed/{species}_{tissue}_all_transcripts.txt"
	shell: "awk '{{ print $5}}' {input} | sort | uniq > {output}"

rule get_AIR_file:
        input: "results/targets/{species}_{tissue}.APA.txt", "results/utrs/{species}_{tissue}.utr.lengths.tsv" #output from APA usage file
        output: "results/targets/{species}_{tissue}.AIRs.txt"
        wildcard_constraints:
               species="^canon" # needed to prevent conflict with no reannotation pipeline
        script: "get_tissue_specific_APA_file.R"

rule fix_targetscan_sites_output:
        input: "results/targets/{species}_{tissue}_chr{chrom}_msa.sites.tmp.tsv"
        output: "results/targets/{species}_{tissue}_chr{chrom}_msa.sites.tsv"
        script: "fix_ts_output.R"
