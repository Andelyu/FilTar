def get_gtf_file(wildcards):
        sci_species_name = config['sci_species_name'][wildcards.species]
        genome_build = config['genome_build'][wildcards.species]

        return ( 'data/' + sci_species_name + '.' + genome_build + '.{}.mod.chr.gtf'.format(config['ensembl_release'])  )

rule pre_mRNA_for_loading:
	input: 
           data=get_gtf_file,
           script="scripts/prepare_mRNA_for_loading.sh"
	output: "results/{species}_mRNA_to_be_loaded.tsv"
	shell: "{input.script} {input.data} > {output}"

rule prep_for_gene_loading:
	input:
           data=get_gtf_file,
           script="modules/upload_to_tables/prepare_gene_for_loading.sh"
	output: "results/{species}_gene_to_be_loaded.tsv"
	shell: "{input.script} {input.data} > {output}"

rule extract_tx_and_gene_IDs:
        input:
           data="data/Homo_sapiens.GRCh38.cdna.all.fa",
           script="exe/extract_tx_and_gene_ids.sh"
        output:
           "results/tx_and_gene_IDs.txt"
        shell:
           "{input.script} {input.data} > {output}"

rule extract_tx_and_gene_IDs_mouse:
        input:
           "data/Mus_musculus.GRCm38.cdna.all.fa"
        output:
           "results/tx_and_gene_IDs_mouse.txt"
        shell:
           "cat {input} | grep '>' | awk '{{ print $1,$7 }}' | tr ' ' '\t' | sed 's/gene_symbol://g' | sed 's/>//g'  > {output}"

rule extract_unique_gene_names:
       input:
          "results/tx_and_gene_IDs_{species}.txt"
       output:
          "results/gene_names_unique_{species}.txt"
       shell:
          "awk '{{print $2}}' {input} | uniq > {output}"

rule prep_mirnas_for_loading:
        input:
            mirnas="results/mature_mirna.tsv",
            script="exe/prep_mirs_for_loading.sh"
        output: "results/mature_mirna_for_db.tsv"
        shell: "{input.script} {input.mirnas} > {output}"

rule get_all_utr_lengths:
        input:  "results/{tissue}.utr.full.bed"
        output: "results/{tissue}.utr.full.tsv"
        script: "get_utr_lengths.R"







